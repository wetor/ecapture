name: Release
on:
  push:
    tags:
      - "v*"
    
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  build-on-ubuntu2204:
    runs-on: ubuntu-22.04
    name: release Linux/Android Version (amd64/arm64)
    permissions:
      contents: write
    steps:
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22.10'
      - name: Install Compilers
        run: |
          sudo apt-get update
          sudo apt-get install --yes \
            build-essential \
            pkgconf \
            libelf-dev \
            llvm-14 \
            clang-14 \
            linux-tools-common \
            linux-tools-generic \
            gcc \
            gcc-aarch64-linux-gnu \
            linux-source
          for tool in "clang" "llc" "llvm-strip"
          do
            sudo rm -f /usr/bin/$tool
            sudo ln -s /usr/bin/$tool-14 /usr/bin/$tool
          done
          cd /usr/src
          source_file=$(find . -maxdepth 1 -name "*linux-source*.tar.bz2")
          source_dir=$(echo "$source_file" | sed 's/\.tar\.bz2//g')  
          sudo tar -xf $source_file
          cd $source_dir
          test -f .config || sudo make oldconfig
          ls -al /usr/src/$source_dir
        shell: bash
      - uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: authenticate
        run: |
          gh auth login --with-token <<<'${{ secrets.GITHUB_TOKEN }}'
      - name: Get Previous Tag
        id: previoustag
        run: |
          PREVIOUS=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
          echo "PREVIOUS_TAG=$PREVIOUS" >> $GITHUB_OUTPUT
      - name: Generate Release Notes
        id: release_notes
        run: |
          echo "{}" > release_notes.json
          echo "NOTES<<EOF" >> $GITHUB_OUTPUT
          jq -r .body release_notes.json >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Write File
        uses: DamianReeves/write-file-action@v1.2
        with:
          path: ./bin/release_notes.txt
          contents: |
            ${{ steps.release_notes.outputs.NOTES }}
          write-mode: append
      - name: Release amd64
        run: |
          make clean
          make env
          make -f builder/Makefile.release release SNAPSHOT_VERSION=${{ github.ref_name }}
      - name: Publish
        run: |
          make -f builder/Makefile.release publish SNAPSHOT_VERSION=${{ github.ref_name }}